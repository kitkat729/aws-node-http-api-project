org: kitkat729
app: aws-node-http-api-project
service: aws-node-http-api-project
frameworkVersion: '3'

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  
provider:
  name: aws
  runtime: nodejs16.x
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - 'dynamodb:PutItem'
            - 'dynamodb:Get*'
            - 'dynamodb:Scan*'
            - 'dynamodb:UpdateItem'
            - 'dynamodb:DeleteItem'
          Resource: arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:service}-customerTable-${sls:stage}
  environment:
    DYNAMODB_CUSTOMER_TABLE: ${self:service}-customerTable-${sls:stage}

functions:
  createCustomer:
    handler: functions/customers/createCustomer.default
    events:
      - httpApi:
          path: /customers
          method: post
  deleteCustomer:
    handler: functions/customers/deleteCustomer.default
    events:
      - httpApi:
          path: /customers/{customerId}
          method: delete
  getCustomer:
    handler: functions/customers/getCustomer.default
    events:
      - httpApi:
          path: /customers/{customerId}
          method: get
  listCustomers:
    handler: functions/customers/listCustomers.default
    events:
      - httpApi:
          path: /customers
          method: get

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: primary_key
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: primary_key
            KeyType: HASH
        TableName: ${self:service}-customerTable-${sls:stage}
